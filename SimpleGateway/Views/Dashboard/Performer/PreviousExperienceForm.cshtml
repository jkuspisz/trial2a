@using SimpleGateway.Models
@{
    ViewData["Title"] = "Previous Experience";
    var previousExperience = ViewBag.PreviousExperience as PreviousExperienceModel;
    var clinicalEntries = ViewBag.ClinicalEntries as List<ClinicalExperienceEntry>;
    var procedureSections = ViewBag.ProcedureSections as List<ProcedureSection>;
    var canEdit = ViewBag.CanEdit as bool? ?? false;
    var isAdvisor = ViewBag.IsAdvisor as bool? ?? false;
}

<div class="container-fluid">
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <div class="row">
        <div class="col-3">
            <ul class="list-group">
                <li class="list-group-item @(ViewBag.ActiveSection == "PerformerDetails" ? "active" : "")">
                    <a href="/Dashboard/PerformerDetails?performerUsername=@ViewBag.PerformerUsername" style="@(ViewBag.ActiveSection == "PerformerDetails" ? "color: white;" : "")">Performer Details</a>
                </li>
                <li class="list-group-item @(ViewBag.ActiveSection == "PreviousExperience" ? "active" : "")">
                    <a href="/Dashboard/PreviousExperienceForm?performerUsername=@ViewBag.PerformerUsername" style="@(ViewBag.ActiveSection == "PreviousExperience" ? "color: white;" : "")">Previous Experience</a>
                </li>
                <li class="list-group-item @(ViewBag.ActiveSection == "Uploads" ? "active" : "")">
                    <a href="/Dashboard/Uploads?performerUsername=@ViewBag.PerformerUsername" style="@(ViewBag.ActiveSection == "Uploads" ? "color: white;" : "")">Uploads</a>
                </li>
                <li class="list-group-item @(ViewBag.ActiveSection == "StructuredConversation" ? "active" : "")">
                    <a href="/Dashboard/StructuredConversation?performerUsername=@ViewBag.PerformerUsername" style="@(ViewBag.ActiveSection == "StructuredConversation" ? "color: white;" : "")">Structured Conversation</a>
                </li>
                <li class="list-group-item @(ViewBag.ActiveSection == "AgreementTerms" ? "active" : "")">
                    <a href="/Dashboard/AgreementTerms?performerUsername=@ViewBag.PerformerUsername" style="@(ViewBag.ActiveSection == "AgreementTerms" ? "color: white;" : "")">Agreement Terms</a>
                </li>
                <li class="list-group-item @(ViewBag.ActiveSection == "WorkBasedAssessments" ? "active" : "")">
                    <a href="/Dashboard/WorkBasedAssessments?performerUsername=@ViewBag.PerformerUsername" style="@(ViewBag.ActiveSection == "WorkBasedAssessments" ? "color: white;" : "")">Work Based Assessments</a>
                </li>
                <li class="list-group-item @(ViewBag.ActiveSection == "CPD" ? "active" : "")">
                    <a href="/Dashboard/CPD?performerUsername=@ViewBag.PerformerUsername" style="@(ViewBag.ActiveSection == "CPD" ? "color: white;" : "")">CPD</a>
                </li>
                <li class="list-group-item @(ViewBag.ActiveSection == "MSF" ? "active" : "")">
                    <a href="/Dashboard/MSF?performerUsername=@ViewBag.PerformerUsername" style="@(ViewBag.ActiveSection == "MSF" ? "color: white;" : "")">MSF</a>
                </li>
                <li class="list-group-item @(ViewBag.ActiveSection == "PSQ" ? "active" : "")">
                    <a href="/Dashboard/PSQ?performerUsername=@ViewBag.PerformerUsername" style="@(ViewBag.ActiveSection == "PSQ" ? "color: white;" : "")">PSQ</a>
                </li>
                <li class="list-group-item @(ViewBag.ActiveSection == "ClinicalNoteAudit" ? "active" : "")">
                    <a href="/Dashboard/ClinicalNoteAudit?performerUsername=@ViewBag.PerformerUsername" style="@(ViewBag.ActiveSection == "ClinicalNoteAudit" ? "color: white;" : "")">Clinical Note Audit</a>
                </li>
                <li class="list-group-item @(ViewBag.ActiveSection == "HelpGuidance" ? "active" : "")">
                    <a href="/Dashboard/HelpGuidance?performerUsername=@ViewBag.PerformerUsername" style="@(ViewBag.ActiveSection == "HelpGuidance" ? "color: white;" : "")">Help & Guidance</a>
                </li>
                <li class="list-group-item @(ViewBag.ActiveSection == "FinalSignOff" ? "active" : "")">
                    <a href="/Dashboard/FinalSignOff?performerUsername=@ViewBag.PerformerUsername" style="@(ViewBag.ActiveSection == "FinalSignOff" ? "color: white;" : "")">Final Sign off</a>
                </li>
                @if (ViewBag.IsOwnDashboard == true)
                {
                    <li class="list-group-item"><a href="/Account/Logout">Logout</a></li>
                }
                else
                {
                    <li class="list-group-item"><a href="/Dashboard/Index">Back to List</a></li>
                }
            </ul>
        </div>
        
        <div class="col-9">
            <h2>Previous Experience - @ViewBag.PerformerName</h2>
            
            <form method="post">
                <!-- Section 1: Registration and Qualifications -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h4>Section 1: Registration and Qualifications</h4>
                    </div>
                    <div class="card-body">
                        <!-- GDC Gaps Explanation -->
                        <div class="mb-3">
                            <label class="form-label fw-bold">If there are any gaps in your registration with the GDC please explain:</label>
                            <textarea class="form-control" name="GdcGapsExplanation" rows="3" @(canEdit ? "" : "readonly")>@(previousExperience?.GdcGapsExplanation ?? "")</textarea>
                        </div>

                        <!-- Professional Qualifications -->
                        <div class="mb-3">
                            <label class="form-label fw-bold">Professional Qualifications</label>
                            <div class="table-responsive">
                                <table class="table table-bordered">
                                    <thead class="table-light">
                                        <tr>
                                            <th>Qualification</th>
                                            <th>Country</th>
                                            <th>Institution</th>
                                            <th>Year</th>
                                            @if (canEdit)
                                            {
                                                <th>Action</th>
                                            }
                                        </tr>
                                    </thead>
                                    <tbody id="qualifications-table">
                                        @if (previousExperience?.Qualifications != null && previousExperience.Qualifications.Any())
                                        {
                                            @for (int i = 0; i < previousExperience.Qualifications.Count; i++)
                                            {
                                                <tr>
                                                    <td><input type="text" class="form-control" name="Qualifications[@i].QualificationName" value="@previousExperience.Qualifications[i].QualificationName" @(canEdit ? "" : "readonly") /></td>
                                                    <td><input type="text" class="form-control" name="Qualifications[@i].Country" value="@previousExperience.Qualifications[i].Country" @(canEdit ? "" : "readonly") /></td>
                                                    <td><input type="text" class="form-control" name="Qualifications[@i].Institution" value="@previousExperience.Qualifications[i].Institution" @(canEdit ? "" : "readonly") /></td>
                                                    <td><input type="text" class="form-control" name="Qualifications[@i].Year" value="@previousExperience.Qualifications[i].Year" @(canEdit ? "" : "readonly") /></td>
                                                    @if (canEdit)
                                                    {
                                                        <td><button type="button" class="btn btn-sm btn-danger" onclick="removeRow(this)">Remove</button></td>
                                                    }
                                                </tr>
                                            }
                                        }
                                        else
                                        {
                                            <tr>
                                                <td colspan="@(canEdit ? "5" : "4")" class="text-center text-muted">No qualifications added yet</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                            @if (canEdit)
                            {
                                <button type="button" class="btn btn-primary btn-sm" onclick="addQualification()">Add Qualification</button>
                            }
                        </div>

                        <!-- Employment History -->
                        <div class="mb-3">
                            <label class="form-label fw-bold">Employment History</label>
                            <div class="table-responsive">
                                <table class="table table-bordered">
                                    <thead class="table-light">
                                        <tr>
                                            <th>Job Title</th>
                                            <th>Address</th>
                                            <th>From Date</th>
                                            <th>To Date</th>
                                            <th>Treated Adults</th>
                                            <th>Treated Children</th>
                                            @if (canEdit)
                                            {
                                                <th>Action</th>
                                            }
                                        </tr>
                                    </thead>
                                    <tbody id="employment-table">
                                        @if (previousExperience?.EmploymentHistory != null && previousExperience.EmploymentHistory.Any())
                                        {
                                            @for (int i = 0; i < previousExperience.EmploymentHistory.Count; i++)
                                            {
                                                <tr>
                                                    <td><input type="text" class="form-control" name="EmploymentHistory[@i].JobTitle" value="@previousExperience.EmploymentHistory[i].JobTitle" @(canEdit ? "" : "readonly") /></td>
                                                    <td><input type="text" class="form-control" name="EmploymentHistory[@i].Address" value="@previousExperience.EmploymentHistory[i].Address" @(canEdit ? "" : "readonly") /></td>
                                                    <td><input type="date" class="form-control" name="EmploymentHistory[@i].From" value="@previousExperience.EmploymentHistory[i].From?.ToString("yyyy-MM-dd")" @(canEdit ? "" : "readonly") /></td>
                                                    <td><input type="date" class="form-control" name="EmploymentHistory[@i].To" value="@previousExperience.EmploymentHistory[i].To?.ToString("yyyy-MM-dd")" @(canEdit ? "" : "readonly") /></td>
                                                    <td><input type="checkbox" class="form-check-input" name="EmploymentHistory[@i].TreatedAdults" @(previousExperience.EmploymentHistory[i].TreatedAdults ? "checked" : "") @(canEdit ? "" : "disabled") /></td>
                                                    <td><input type="checkbox" class="form-check-input" name="EmploymentHistory[@i].TreatedChildren" @(previousExperience.EmploymentHistory[i].TreatedChildren ? "checked" : "") @(canEdit ? "" : "disabled") /></td>
                                                    @if (canEdit)
                                                    {
                                                        <td><button type="button" class="btn btn-sm btn-danger" onclick="removeRow(this)">Remove</button></td>
                                                    }
                                                </tr>
                                            }
                                        }
                                        else
                                        {
                                            <tr>
                                                <td colspan="@(canEdit ? "7" : "6")" class="text-center text-muted">No employment history added yet</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                            @if (canEdit)
                            {
                                <button type="button" class="btn btn-primary btn-sm" onclick="addEmployment()">Add Employment</button>
                            }
                        </div>

                        <!-- NHS Experience -->
                        <div class="mb-3">
                            <label class="form-label fw-bold">Have you worked as a dentist in NHS general dental practice primary care in the UK?</label>
                            <select class="form-select" name="NhsExperience" @(canEdit ? "" : "disabled")>
                                <option value="">Select</option>
                                <option value="yes">Yes</option>
                                <option value="no">No</option>
                            </select>
                        </div>

                        <!-- Work Pattern -->
                        <div class="row mb-3">
                            <div class="col-md-3">
                                <label class="form-label fw-bold">Full-time?</label>
                                <select class="form-select" name="FullTime" @(canEdit ? "" : "disabled")>
                                    <option value="">Select</option>
                                    <option value="yes">Yes</option>
                                    <option value="no">No</option>
                                </select>
                            </div>
                            <div class="col-md-3">
                                <label class="form-label fw-bold">Part-time days/week</label>
                                <input type="text" class="form-control" name="PartTimeDaysPerWeek" value="@(previousExperience?.PartTimeDaysPerWeek ?? "")" @(canEdit ? "" : "readonly") />
                            </div>
                            <div class="col-md-3">
                                <label class="form-label fw-bold">Years</label>
                                <input type="text" class="form-control" name="Years" value="@(previousExperience?.Years ?? "")" @(canEdit ? "" : "readonly") />
                            </div>
                            <div class="col-md-3">
                                <label class="form-label fw-bold">Months</label>
                                <input type="text" class="form-control" name="Months" value="@(previousExperience?.Months ?? "")" @(canEdit ? "" : "readonly") />
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Section 2: Record of Clinical Experience -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h4>Section 2: Record of Clinical Experience</h4>
                    </div>
                    <div class="card-body">
                        <div class="alert alert-info mb-4">
                            <p><strong>This will form part of the assessment of your previous clinical experience:</strong></p>
                            <ul class="mb-0">
                                <li>Please provide as much information as possible on the following to assist the assessors.</li>
                                <li>Do not include experience obtained as a student unless you are a new graduate.</li>
                                <li>Please base all figures on the 48 months of clinical practice prior to the completion of this form.</li>
                            </ul>
                        </div>
                        
                        @if (procedureSections != null)
                        {
                            @foreach (var procSection in procedureSections)
                            {
                                <div class="mb-4">
                                    <h5 class="text-primary">@procSection.Category</h5>
                                    <div class="table-responsive">
                                        <table class="table table-bordered table-sm">
                                            <thead class="table-light">
                                                <tr>
                                                    <th>Procedure</th>
                                                    <th>Number of Cases</th>
                                                    <th>Confidence (1-6)</th>
                                                    <th>Date of Last Procedure</th>
                                                    <th>Extra Info</th>
                                                    <th>Training Need</th>
                                                    <th>Advisor Comment</th>
                                                    <th>Sign Off</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var procedure in procSection.Procedures)
                                                {
                                                    var entry = clinicalEntries?.FirstOrDefault(e => e.Category == procSection.Category && e.Procedure == procedure.Procedure);
                                                    
                                                    <tr>
                                                        <td>@procedure.Procedure</td>
                                                        <td>
                                                            <select class="form-select form-select-sm" @(canEdit ? "" : "disabled")>
                                                                <option value="">Select</option>
                                                                @foreach (var option in procedure.NumberCategories)
                                                                {
                                                                    <option value="@option">@option</option>
                                                                }
                                                            </select>
                                                        </td>
                                                        <td>
                                                            <select class="form-select form-select-sm" @(canEdit ? "" : "disabled")>
                                                                <option value="">Select</option>
                                                                <option value="1">1</option>
                                                                <option value="2">2</option>
                                                                <option value="3">3</option>
                                                                <option value="4">4</option>
                                                                <option value="5">5</option>
                                                                <option value="6">6</option>
                                                            </select>
                                                        </td>
                                                        <td>
                                                            <input type="date" class="form-control form-control-sm" value="@(entry?.DateLastProcedure?.ToString("yyyy-MM-dd") ?? "")" @(canEdit ? "" : "readonly") />
                                                        </td>
                                                        <td>
                                                            <input type="text" class="form-control form-control-sm" value="@(entry?.ExtraInfo ?? "")" placeholder="(optional)" @(canEdit ? "" : "readonly") />
                                                        </td>
                                                        <td class="text-center">
                                                            <input type="checkbox" @(canEdit ? "" : "disabled") />
                                                        </td>
                                                        <td>
                                                            <textarea class="form-control form-control-sm" rows="2" @(isAdvisor && entry?.AdvisorSignedOffAt == null ? "" : "readonly")>@(entry?.AdvisorComment ?? "")</textarea>
                                                        </td>
                                                        <td class="text-center">
                                                            @if (entry?.AdvisorSignedOffAt != null)
                                                            {
                                                                <small class="text-success">
                                                                    ✓ @entry.AdvisorSignedOffBy<br/>
                                                                    @entry.AdvisorSignedOffAt.Value.ToString("MM/dd/yyyy")
                                                                </small>
                                                            }
                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>

                <!-- Declaration Section -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h4>Applicant's Declaration</h4>
                    </div>
                    <div class="card-body">
                        <p class="mb-3">
                            By submitting this form, you confirm that, to the best of your knowledge, this is a true and accurate record of your clinical experience as a qualified dental surgeon.
                        </p>
                        <div class="form-check mb-3">
                            <input type="checkbox" class="form-check-input" id="applicant-confirm" name="ApplicantConfirmed" value="true" @(canEdit ? "" : "disabled") @(previousExperience?.ApplicantConfirmed == true ? "checked" : "") />
                            <label class="form-check-label" for="applicant-confirm">
                                I declare the above information being true.
                            </label>
                            @if (previousExperience?.ApplicantConfirmedAt != null)
                            {
                                <span class="ms-3 text-muted">Submitted: @previousExperience.ApplicantConfirmedAt.Value.ToString("MM/dd/yyyy HH:mm")</span>
                            }
                        </div>

                        <div class="mt-4">
                            <h5>Advisor Declaration</h5>
                            <p>All clinical experience has been discussed and checked</p>
                            
                            @if (previousExperience?.IsSubmitted == true && previousExperience?.ApplicantConfirmed == true)
                            {
                                @if (isAdvisor)
                                {
                                    @if (previousExperience?.AdvisorDeclarationAt == null)
                                    {
                                        <!-- Advisor can now complete their declaration -->
                                        <div class="border p-3 bg-light">
                                            <div class="form-check mb-3">
                                                <input type="checkbox" class="form-check-input" id="advisor-confirm" name="AdvisorDeclarationConfirmed" value="true" />
                                                <label class="form-check-label" for="advisor-confirm">
                                                    <strong>I confirm that all clinical experience has been discussed and checked</strong>
                                                </label>
                                            </div>
                                            
                                            <div class="mb-3">
                                                <label class="form-label">Advisor Comments (Optional):</label>
                                                <textarea class="form-control" name="AdvisorDeclarationComment" rows="3" placeholder="Any additional comments or observations..."></textarea>
                                            </div>
                                            
                                            <button type="submit" class="btn btn-success">Submit Advisor Declaration</button>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="alert alert-success">
                                            ✓ Confirmed by @previousExperience.AdvisorDeclarationBy on @previousExperience.AdvisorDeclarationAt.Value.ToString("MM/dd/yyyy HH:mm")
                                            @if (!string.IsNullOrEmpty(previousExperience.AdvisorDeclarationComment))
                                            {
                                                <div class="mt-2">
                                                    <strong>Advisor Comments:</strong><br/>
                                                    @previousExperience.AdvisorDeclarationComment
                                                </div>
                                            }
                                        </div>
                                    }
                                }
                                else
                                {
                                    @if (previousExperience?.AdvisorDeclarationAt != null)
                                    {
                                        <div class="alert alert-success">
                                            ✓ Confirmed by @previousExperience.AdvisorDeclarationBy on @previousExperience.AdvisorDeclarationAt.Value.ToString("MM/dd/yyyy HH:mm")
                                            @if (!string.IsNullOrEmpty(previousExperience.AdvisorDeclarationComment))
                                            {
                                                <div class="mt-2">
                                                    <strong>Advisor Comments:</strong><br/>
                                                    @previousExperience.AdvisorDeclarationComment
                                                </div>
                                            }
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="alert alert-info">
                                            <i class="fas fa-info-circle"></i> Waiting for advisor to review and confirm your clinical experience.
                                        </div>
                                    }
                                }
                            }
                            else
                            {
                                <div class="alert alert-warning">
                                    <i class="fas fa-exclamation-triangle"></i> Form must be submitted by performer before advisor review.
                                </div>
                            }
                        </div>
                    </div>
                </div>

                @if (canEdit)
                {
                    <div class="text-center">
                        <button type="submit" name="action" value="save" class="btn btn-secondary btn-lg me-3">
                            <i class="fas fa-save"></i> Save Draft
                        </button>
                        <button type="submit" name="action" value="submit" class="btn btn-primary btn-lg" 
                                onclick="return confirm('Are you sure you want to submit? This will lock your form for advisor review.')">
                            <i class="fas fa-paper-plane"></i> Submit for Review
                        </button>
                    </div>
                }
                else if (previousExperience?.ApplicantConfirmedAt != null)
                {
                    <div class="text-center">
                        <div class="alert alert-info">
                            <i class="fas fa-lock"></i> This form has been submitted and is now locked for advisor review.
                        </div>
                    </div>
                }
            </form>
        </div>
    </div>
</div>

<script>
    // Function to add a new qualification row
    function addQualification() {
        const tableBody = document.getElementById('qualifications-table');
        const rowCount = tableBody.rows.length;
        const newRow = `
            <tr>
                <td><input type="text" class="form-control" name="Qualifications[${rowCount}].QualificationName" /></td>
                <td><input type="text" class="form-control" name="Qualifications[${rowCount}].Country" /></td>
                <td><input type="text" class="form-control" name="Qualifications[${rowCount}].Institution" /></td>
                <td><input type="text" class="form-control" name="Qualifications[${rowCount}].Year" /></td>
                <td><button type="button" class="btn btn-sm btn-danger" onclick="removeRow(this)">Remove</button></td>
            </tr>
        `;
        
        // Remove "no qualifications" row if it exists
        const noDataRow = tableBody.querySelector('td[colspan]');
        if (noDataRow) {
            noDataRow.parentElement.remove();
        }
        
        tableBody.insertAdjacentHTML('beforeend', newRow);
    }

    // Function to add a new employment row
    function addEmployment() {
        const tableBody = document.getElementById('employment-table');
        const rowCount = tableBody.rows.length;
        const newRow = `
            <tr>
                <td><input type="text" class="form-control" name="EmploymentHistory[${rowCount}].JobTitle" /></td>
                <td><input type="text" class="form-control" name="EmploymentHistory[${rowCount}].Address" /></td>
                <td><input type="date" class="form-control" name="EmploymentHistory[${rowCount}].From" /></td>
                <td><input type="date" class="form-control" name="EmploymentHistory[${rowCount}].To" /></td>
                <td><input type="checkbox" class="form-check-input" name="EmploymentHistory[${rowCount}].TreatedAdults" /></td>
                <td><input type="checkbox" class="form-check-input" name="EmploymentHistory[${rowCount}].TreatedChildren" /></td>
                <td><button type="button" class="btn btn-sm btn-danger" onclick="removeRow(this)">Remove</button></td>
            </tr>
        `;
        
        // Remove "no employment history" row if it exists
        const noDataRow = tableBody.querySelector('td[colspan]');
        if (noDataRow) {
            noDataRow.parentElement.remove();
        }
        
        tableBody.insertAdjacentHTML('beforeend', newRow);
    }

    // Function to remove a table row
    function removeRow(button) {
        const row = button.closest('tr');
        const tableBody = row.parentElement;
        row.remove();
        
        // Add "no data" row if table is now empty
        if (tableBody.rows.length === 0) {
            const isQualifications = tableBody.id === 'qualifications-table';
            const colspan = isQualifications ? '5' : '7';
            const message = isQualifications ? 'No qualifications added yet' : 'No employment history added yet';
            
            const noDataRow = `
                <tr>
                    <td colspan="${colspan}" class="text-center text-muted">${message}</td>
                </tr>
            `;
            tableBody.insertAdjacentHTML('beforeend', noDataRow);
        }
    }
</script>
