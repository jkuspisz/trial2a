@model SimpleGateway.Models.PrevExpModel
@{
    ViewData["Title"] = "Clinical Experience Log";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <h2>Clinical Experience Log - @ViewBag.PerformerName</h2>
            @if (!string.IsNullOrEmpty(TempData["SuccessMessage"] as string))
            {
                <div class="alert alert-success">
                    @TempData["SuccessMessage"]
                    @if (TempData["TotalRecords"] != null)
                    {
                        <br><strong>Total records in PostgreSQL database:</strong> @TempData["TotalRecords"]
                    }
                </div>
            }
            
            @if (!string.IsNullOrEmpty(TempData["ErrorMessage"] as string))
            {
                <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
            }
            
            @if (!string.IsNullOrEmpty(TempData["DebugMessage"] as string))
            {
                <div class="alert alert-info">@TempData["DebugMessage"]</div>
            }
        </div>
    </div>
    <div class="row">
        <div class="col-3">
            <ul class="list-group">
                <li class="list-group-item @(ViewBag.ActiveSection == "Dashboard" ? "active" : "")">
                    <a href="/Dashboard/Index" style="@(ViewBag.ActiveSection == "Dashboard" ? "color: white;" : "")">
                        <i class="bi bi-speedometer2"></i> Dashboard Overview
                    </a>
                </li>
                <li class="list-group-item @(ViewBag.ActiveSection == "PerformerDetails" ? "active" : "")">
                    <a href="/Dashboard/PerformerDetails?performerUsername=@ViewBag.PerformerUsername" style="@(ViewBag.ActiveSection == "PerformerDetails" ? "color: white;" : "")">Performer Details</a>
                </li>
                <li class="list-group-item @(ViewBag.ActiveSection == "PreviousExperience" ? "active" : "")">
                    <a href="/Dashboard/PreviousExperience?performerUsername=@ViewBag.PerformerUsername" style="@(ViewBag.ActiveSection == "PreviousExperience" ? "color: white;" : "")">Clinical Experience Log</a>
                </li>
                <li class="list-group-item @(ViewBag.ActiveSection == "TestPractice" ? "active" : "")">
                    <a href="/Dashboard/TestPractice?performerUsername=@ViewBag.PerformerUsername" style="@(ViewBag.ActiveSection == "TestPractice" ? "color: white;" : "")">Test Practice</a>
                </li>
                <li class="list-group-item @(ViewBag.ActiveSection == "Uploads" ? "active" : "")">
                    <a href="/Dashboard/Uploads?performerUsername=@ViewBag.PerformerUsername" style="@(ViewBag.ActiveSection == "Uploads" ? "color: white;" : "")">Uploads</a>
                </li>
                <li class="list-group-item @(ViewBag.ActiveSection == "StructuredConversation" ? "active" : "")">
                    <a href="/Dashboard/StructuredConversation?performerUsername=@ViewBag.PerformerUsername" style="@(ViewBag.ActiveSection == "StructuredConversation" ? "color: white;" : "")">Structured Conversation</a>
                </li>
                <li class="list-group-item @(ViewBag.ActiveSection == "AgreementTerms" ? "active" : "")">
                    <a href="/Dashboard/AgreementTerms?performerUsername=@ViewBag.PerformerUsername" style="@(ViewBag.ActiveSection == "AgreementTerms" ? "color: white;" : "")">Agreement Terms</a>
                </li>
                <li class="list-group-item @(ViewBag.ActiveSection == "WorkBasedAssessments" ? "active" : "")">
                    <a href="/Dashboard/WorkBasedAssessments?performerUsername=@ViewBag.PerformerUsername" style="@(ViewBag.ActiveSection == "WorkBasedAssessments" ? "color: white;" : "")">Work Based Assessments</a>
                </li>
                <li class="list-group-item @(ViewBag.ActiveSection == "CPD" ? "active" : "")">
                    <a href="/Dashboard/CPD?performerUsername=@ViewBag.PerformerUsername" style="@(ViewBag.ActiveSection == "CPD" ? "color: white;" : "")">CPD</a>
                </li>
                <li class="list-group-item @(ViewBag.ActiveSection == "MSF" ? "active" : "")">
                    <a href="/Dashboard/MSF?performerUsername=@ViewBag.PerformerUsername" style="@(ViewBag.ActiveSection == "MSF" ? "color: white;" : "")">MSF</a>
                </li>
                <li class="list-group-item @(ViewBag.ActiveSection == "PSQ" ? "active" : "")">
                    <a href="/Dashboard/PSQ?performerUsername=@ViewBag.PerformerUsername" style="@(ViewBag.ActiveSection == "PSQ" ? "color: white;" : "")">PSQ</a>
                </li>
                <li class="list-group-item @(ViewBag.ActiveSection == "ClinicalNoteAudit" ? "active" : "")">
                    <a href="/Dashboard/ClinicalNoteAudit?performerUsername=@ViewBag.PerformerUsername" style="@(ViewBag.ActiveSection == "ClinicalNoteAudit" ? "color: white;" : "")">Clinical Note Audit</a>
                </li>
                <li class="list-group-item @(ViewBag.ActiveSection == "HelpGuidance" ? "active" : "")">
                    <a href="/Dashboard/HelpGuidance?performerUsername=@ViewBag.PerformerUsername" style="@(ViewBag.ActiveSection == "HelpGuidance" ? "color: white;" : "")">Help & Guidance</a>
                </li>
            </ul>
        </div>
        <div class="col-9">
            <form action="/Dashboard/Performer/PreviousExperience" method="post">
                <input type="hidden" name="Username" value="@Model.Username" />
                
                <!-- Section 1: Registration and Qualifications -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h5>Section 1: Registration and Qualifications</h5>
                    </div>
                    <div class="card-body">
                        
                        <div class="mb-3">
                            <label asp-for="GdcGapsExplanation" class="form-label"></label>
                            <textarea asp-for="GdcGapsExplanation" class="form-control" rows="3" placeholder="If there are any gaps in your registration with the GDC please explain"></textarea>
                            <span asp-validation-for="GdcGapsExplanation" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Professional Qualifications</label>
                            <div id="qualifications-container">
                                <!-- Qualifications will be dynamically managed here -->
                                <div class="qualification-entry mb-2 p-3 border rounded">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <label class="form-label">Qualification</label>
                                            <input type="text" class="form-control qualification-input" placeholder="Qualification" />
                                        </div>
                                        <div class="col-md-3">
                                            <label class="form-label">Country</label>
                                            <input type="text" class="form-control country-input" placeholder="Country" />
                                        </div>
                                        <div class="col-md-3">
                                            <label class="form-label">Institution</label>
                                            <input type="text" class="form-control institution-input" placeholder="Institution" />
                                        </div>
                                        <div class="col-md-2">
                                            <label class="form-label">Year</label>
                                            <input type="text" class="form-control year-input" placeholder="Year" />
                                        </div>
                                        <div class="col-md-1">
                                            <label class="form-label">&nbsp;</label>
                                            <button type="button" class="btn btn-danger btn-sm d-block remove-qualification">Remove</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <button type="button" class="btn btn-primary btn-sm" id="add-qualification">Add Qualification</button>
                            <input type="hidden" asp-for="QualificationsJson" id="qualifications-json" />
                        </div>

                        <div class="mb-3">
                            <label asp-for="NhsExperience" class="form-label"></label>
                            <select asp-for="NhsExperience" class="form-select">
                                <option value="">Select</option>
                                <option value="yes">Yes</option>
                                <option value="no">No</option>
                            </select>
                            <span asp-validation-for="NhsExperience" class="text-danger"></span>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-3">
                                <label asp-for="FullTime" class="form-label"></label>
                                <select asp-for="FullTime" class="form-select">
                                    <option value="">Select</option>
                                    <option value="yes">Yes</option>
                                    <option value="no">No</option>
                                </select>
                            </div>
                            <div class="col-md-3">
                                <label asp-for="PartTimeDaysPerWeek" class="form-label"></label>
                                <input asp-for="PartTimeDaysPerWeek" class="form-control" placeholder="Days per week" />
                            </div>
                            <div class="col-md-3">
                                <label asp-for="Years" class="form-label"></label>
                                <input asp-for="Years" class="form-control" placeholder="Years" />
                            </div>
                            <div class="col-md-3">
                                <label asp-for="Months" class="form-label"></label>
                                <input asp-for="Months" class="form-control" placeholder="Months" />
                            </div>
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Employment History (most recent first)</label>
                            <div id="employment-container">
                                <!-- Employment entries will be dynamically managed here -->
                                <div class="employment-entry mb-2 p-3 border rounded">
                                    <div class="row">
                                        <div class="col-md-2">
                                            <label class="form-label">From Month</label>
                                            <select class="form-select from-month-input">
                                                <option value="">Select Month</option>
                                                <option value="01">January</option>
                                                <option value="02">February</option>
                                                <option value="03">March</option>
                                                <option value="04">April</option>
                                                <option value="05">May</option>
                                                <option value="06">June</option>
                                                <option value="07">July</option>
                                                <option value="08">August</option>
                                                <option value="09">September</option>
                                                <option value="10">October</option>
                                                <option value="11">November</option>
                                                <option value="12">December</option>
                                            </select>
                                        </div>
                                        <div class="col-md-2">
                                            <label class="form-label">From Year</label>
                                            <select class="form-select from-year-input">
                                                <option value="">Select Year</option>
                                                <!-- Years will be populated by JavaScript -->
                                            </select>
                                        </div>
                                        <div class="col-md-2">
                                            <label class="form-label">To Month</label>
                                            <select class="form-select to-month-input">
                                                <option value="">Select Month</option>
                                                <option value="01">January</option>
                                                <option value="02">February</option>
                                                <option value="03">March</option>
                                                <option value="04">April</option>
                                                <option value="05">May</option>
                                                <option value="06">June</option>
                                                <option value="07">July</option>
                                                <option value="08">August</option>
                                                <option value="09">September</option>
                                                <option value="10">October</option>
                                                <option value="11">November</option>
                                                <option value="12">December</option>
                                            </select>
                                        </div>
                                        <div class="col-md-2">
                                            <label class="form-label">To Year</label>
                                            <select class="form-select to-year-input">
                                                <option value="">Select Year</option>
                                                <!-- Years will be populated by JavaScript -->
                                            </select>
                                        </div>
                                        <div class="col-md-2">
                                            <label class="form-label">Job Title</label>
                                            <input type="text" class="form-control job-title-input" placeholder="Job Title" />
                                        </div>
                                        <div class="col-md-3">
                                            <label class="form-label">Full Address</label>
                                            <input type="text" class="form-control address-input" placeholder="Full Address" />
                                        </div>
                                        <div class="col-md-1">
                                            <label class="form-label">Adults</label>
                                            <div class="form-check">
                                                <input type="checkbox" class="form-check-input treated-adults-input" />
                                            </div>
                                        </div>
                                        <div class="col-md-1">
                                            <label class="form-label">Children</label>
                                            <div class="form-check">
                                                <input type="checkbox" class="form-check-input treated-children-input" />
                                            </div>
                                        </div>
                                        <div class="col-md-1">
                                            <label class="form-label">&nbsp;</label>
                                            <button type="button" class="btn btn-danger btn-sm d-block remove-employment">Remove</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <button type="button" class="btn btn-primary btn-sm" id="add-employment">Add Employment</button>
                            <input type="hidden" asp-for="EmploymentHistoryJson" id="employment-json" />
                        </div>
                    </div>
                </div>
                        </div>
                    </div>
                </div>

                <!-- Section 2: Record of Clinical Experience -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h5>Section 2: Record of Clinical Experience</h5>
                    </div>
                    <div class="card-body">
                        <div id="clinical-experience-container">
                            <!-- Clinical experience entries will be populated by JavaScript -->
                            <div class="clinical-category mb-4">
                                <h6 class="fw-bold">Endodontics</h6>
                                <div class="table-responsive">
                                    <table class="table table-bordered table-sm">
                                        <thead>
                                            <tr>
                                                <th>Procedure</th>
                                                <th>Number of Cases</th>
                                                <th>Confidence (1-6)</th>
                                                <th>Date of Last Procedure</th>
                                                <th>Extra Info</th>
                                                <th>Training Need</th>
                                                <th>Advisor Comment</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr>
                                                <td>Single rooted teeth</td>
                                                <td>
                                                    <select class="form-select form-select-sm">
                                                        <option value="">Select</option>
                                                        <option value="0">0</option>
                                                        <option value="1-4">1-4</option>
                                                        <option value="+5">+5</option>
                                                    </select>
                                                </td>
                                                <td>
                                                    <select class="form-select form-select-sm">
                                                        <option value="">Select</option>
                                                        <option value="1">1</option>
                                                        <option value="2">2</option>
                                                        <option value="3">3</option>
                                                        <option value="4">4</option>
                                                        <option value="5">5</option>
                                                        <option value="6">6</option>
                                                    </select>
                                                </td>
                                                <td><input type="date" class="form-control form-control-sm" /></td>
                                                <td><input type="text" class="form-control form-control-sm" placeholder="(optional)" /></td>
                                                <td class="text-center"><input type="checkbox" class="form-check-input" /></td>
                                                <td><textarea class="form-control form-control-sm" rows="2"></textarea></td>
                                            </tr>
                                            <tr>
                                                <td>Molars</td>
                                                <td>
                                                    <select class="form-select form-select-sm">
                                                        <option value="">Select</option>
                                                        <option value="0">0</option>
                                                        <option value="1-4">1-4</option>
                                                        <option value="+5">+5</option>
                                                    </select>
                                                </td>
                                                <td>
                                                    <select class="form-select form-select-sm">
                                                        <option value="">Select</option>
                                                        <option value="1">1</option>
                                                        <option value="2">2</option>
                                                        <option value="3">3</option>
                                                        <option value="4">4</option>
                                                        <option value="5">5</option>
                                                        <option value="6">6</option>
                                                    </select>
                                                </td>
                                                <td><input type="date" class="form-control form-control-sm" /></td>
                                                <td><input type="text" class="form-control form-control-sm" placeholder="(optional)" /></td>
                                                <td class="text-center"><input type="checkbox" class="form-check-input" /></td>
                                                <td><textarea class="form-control form-control-sm" rows="2"></textarea></td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>

                            <div class="clinical-category mb-4">
                                <h6 class="fw-bold">Restorative Dentistry</h6>
                                <div class="table-responsive">
                                    <table class="table table-bordered table-sm">
                                        <thead>
                                            <tr>
                                                <th>Procedure</th>
                                                <th>Number of Cases</th>
                                                <th>Confidence (1-6)</th>
                                                <th>Date of Last Procedure</th>
                                                <th>Extra Info</th>
                                                <th>Training Need</th>
                                                <th>Advisor Comment</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr>
                                                <td>Fillings using amalgam</td>
                                                <td>
                                                    <select class="form-select form-select-sm">
                                                        <option value="">Select</option>
                                                        <option value="0">0</option>
                                                        <option value="1-10">1-10</option>
                                                        <option value="+11">+11</option>
                                                    </select>
                                                </td>
                                                <td>
                                                    <select class="form-select form-select-sm">
                                                        <option value="">Select</option>
                                                        <option value="1">1</option>
                                                        <option value="2">2</option>
                                                        <option value="3">3</option>
                                                        <option value="4">4</option>
                                                        <option value="5">5</option>
                                                        <option value="6">6</option>
                                                    </select>
                                                </td>
                                                <td><input type="date" class="form-control form-control-sm" /></td>
                                                <td><input type="text" class="form-control form-control-sm" placeholder="(optional)" /></td>
                                                <td class="text-center"><input type="checkbox" class="form-check-input" /></td>
                                                <td><textarea class="form-control form-control-sm" rows="2"></textarea></td>
                                            </tr>
                                            <tr>
                                                <td>Fillings using composite resin</td>
                                                <td>
                                                    <select class="form-select form-select-sm">
                                                        <option value="">Select</option>
                                                        <option value="0">0</option>
                                                        <option value="1-10">1-10</option>
                                                        <option value="+11">+11</option>
                                                    </select>
                                                </td>
                                                <td>
                                                    <select class="form-select form-select-sm">
                                                        <option value="">Select</option>
                                                        <option value="1">1</option>
                                                        <option value="2">2</option>
                                                        <option value="3">3</option>
                                                        <option value="4">4</option>
                                                        <option value="5">5</option>
                                                        <option value="6">6</option>
                                                    </select>
                                                </td>
                                                <td><input type="date" class="form-control form-control-sm" /></td>
                                                <td><input type="text" class="form-control form-control-sm" placeholder="(optional)" /></td>
                                                <td class="text-center"><input type="checkbox" class="form-check-input" /></td>
                                                <td><textarea class="form-control form-control-sm" rows="2"></textarea></td>
                                            </tr>
                                            <tr>
                                                <td>Crowns</td>
                                                <td>
                                                    <select class="form-select form-select-sm">
                                                        <option value="">Select</option>
                                                        <option value="0">0</option>
                                                        <option value="1-10">1-10</option>
                                                        <option value="+11">+11</option>
                                                    </select>
                                                </td>
                                                <td>
                                                    <select class="form-select form-select-sm">
                                                        <option value="">Select</option>
                                                        <option value="1">1</option>
                                                        <option value="2">2</option>
                                                        <option value="3">3</option>
                                                        <option value="4">4</option>
                                                        <option value="5">5</option>
                                                        <option value="6">6</option>
                                                    </select>
                                                </td>
                                                <td><input type="date" class="form-control form-control-sm" /></td>
                                                <td><input type="text" class="form-control form-control-sm" placeholder="(optional)" /></td>
                                                <td class="text-center"><input type="checkbox" class="form-check-input" /></td>
                                                <td><textarea class="form-control form-control-sm" rows="2"></textarea></td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>

                            <!-- More clinical categories will be added via JavaScript -->
                        </div>
                        <input type="hidden" asp-for="ClinicalExperienceJson" id="clinical-experience-json" />
                    </div>
                </div>

                <!-- Declaration Section -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h5>Applicant's Declaration</h5>
                    </div>
                    <div class="card-body">
                        <p class="mb-3">
                            By submitting this form, you confirm that, to the best of your knowledge, this is a true and accurate record of your clinical experience as a qualified dental surgeon.
                        </p>
                        <div class="form-check mb-3">
                            <input asp-for="ApplicantConfirmed" type="checkbox" class="form-check-input" id="applicant-confirm" />
                            <label for="applicant-confirm" class="form-check-label">I confirm</label>
                            @if (Model.ApplicantConfirmedAt.HasValue)
                            {
                                <span class="ms-3 text-muted">Date: @Model.ApplicantConfirmedAt.Value.ToString("dd/MM/yyyy")</span>
                            }
                        </div>

                        @if (ViewBag.CurrentUserRole == "advisor")
                        {
                            <div class="mt-4 p-3 bg-light rounded">
                                <h6 class="fw-bold">Advisor Declaration</h6>
                                <p>Advisor declares all has been discussed and checked</p>
                                @if (Model.AdvisorDeclarationAt.HasValue)
                                {
                                    <span class="text-success">
                                        Confirmed by @Model.AdvisorDeclarationBy on @Model.AdvisorDeclarationAt.Value.ToString("dd/MM/yyyy HH:mm")
                                    </span>
                                }
                                else
                                {
                                    <button type="button" class="btn btn-success" id="advisor-confirm">Confirm as Advisor</button>
                                }
                            </div>
                        }
                    </div>
                </div>

                <div class="mb-3">
                    <button type="submit" class="btn btn-primary btn-lg">Save Clinical Experience Log</button>
                    <a href="@Url.Action("Index", "Dashboard")" class="btn btn-secondary btn-lg">Cancel</a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    
    <script>
        // Clinical experience data structure from TSX
        const procedureSections = [
            {
                category: "Endodontics",
                procedures: [
                    { procedure: "Single rooted teeth", number_categories: ["0", "1-4", "+5"] },
                    { procedure: "Molars", number_categories: ["0", "1-4", "+5"] },
                ]
            },
            {
                category: "Restorative Dentistry", 
                procedures: [
                    { procedure: "Fillings using amalgam", number_categories: ["0", "1-10", "+11"] },
                    { procedure: "Fillings using composite resin", number_categories: ["0", "1-10", "+11"] },
                    { procedure: "Crowns", number_categories: ["0", "1-10", "+11"] },
                ]
            },
            {
                category: "Prosthetics / Prosthodontics",
                procedures: [
                    { procedure: "Dentures provided", number_categories: ["0-5", "+6"] },
                ]
            },
            {
                category: "Periodontics",
                procedures: [
                    { procedure: "Mechanical debridement procedures", number_categories: ["0-5", "6-10", "+10"] },
                ]
            },
            {
                category: "Paediatric Dentistry",
                procedures: [
                    { procedure: "Deciduous teeth restored", number_categories: ["0-5", "6-10", "+10"] },
                ]
            },
            {
                category: "Extractions & Oral Surgery",
                procedures: [
                    { procedure: "Simple extractions", number_categories: ["0-5", "6-10", "+10"] },
                    { procedure: "Extractions including root division", number_categories: ["0-5", "6-10", "+10"] },
                ]
            },
            {
                category: "Diagnosis & Assessment",
                procedures: [
                    { procedure: "Clinical assessments (patient examinations)", number_categories: ["0", "1-40", "+40"] },
                    { procedure: "Basic Periodontal Examinations (BPE)", number_categories: ["0", "1-40", "+40"] },
                    { procedure: "6-point pocket charts", number_categories: ["0", "1-40", "+40"] },
                    { procedure: "Take own radiographs", number_categories: ["0", "1-40", "+40"] },
                ]
            }
        ];

        // Initialize the form when page loads
        document.addEventListener('DOMContentLoaded', function() {
            populateYearDropdowns();
            initializeQualifications();
            initializeEmployment();
            initializeClinicalExperience();
            
            // Set up form submission to collect JSON data
            document.querySelector('form').addEventListener('submit', function(e) {
                collectQualificationsData();
                collectEmploymentData();
                collectClinicalExperienceData();
            });
        });

        // Populate year dropdowns from 1980 to current year
        function populateYearDropdowns() {
            const currentYear = new Date().getFullYear();
            const startYear = 1980;
            
            const yearSelects = document.querySelectorAll('.from-year-input, .to-year-input, .last-procedure-year');
            
            yearSelects.forEach(select => {
                for (let year = currentYear; year >= startYear; year--) {
                    const option = document.createElement('option');
                    option.value = year;
                    option.textContent = year;
                    select.appendChild(option);
                }
            });
            
            // Fix hardcoded date inputs in existing HTML tables
            fixHardcodedDateInputs();
        }

        function fixHardcodedDateInputs() {
            // Find all date inputs in clinical experience tables and replace with month/year dropdowns
            document.querySelectorAll('.clinical-category input[type="date"]').forEach(dateInput => {
                const monthYearDiv = document.createElement('div');
                monthYearDiv.className = 'd-flex gap-1';
                
                const monthSelect = document.createElement('select');
                monthSelect.className = 'form-select form-select-sm last-procedure-month';
                monthSelect.innerHTML = `
                    <option value="">Month</option>
                    <option value="01">Jan</option>
                    <option value="02">Feb</option>
                    <option value="03">Mar</option>
                    <option value="04">Apr</option>
                    <option value="05">May</option>
                    <option value="06">Jun</option>
                    <option value="07">Jul</option>
                    <option value="08">Aug</option>
                    <option value="09">Sep</option>
                    <option value="10">Oct</option>
                    <option value="11">Nov</option>
                    <option value="12">Dec</option>
                `;
                
                const yearSelect = document.createElement('select');
                yearSelect.className = 'form-select form-select-sm last-procedure-year';
                yearSelect.innerHTML = '<option value="">Year</option>';
                
                const currentYear = new Date().getFullYear();
                for (let year = currentYear; year >= 1980; year--) {
                    const option = document.createElement('option');
                    option.value = year;
                    option.textContent = year;
                    yearSelect.appendChild(option);
                }
                
                monthYearDiv.appendChild(monthSelect);
                monthYearDiv.appendChild(yearSelect);
                
                dateInput.parentNode.replaceChild(monthYearDiv, dateInput);
            });
        }

        // Qualifications management
        function initializeQualifications() {
            const addBtn = document.getElementById('add-qualification');
            
            addBtn.addEventListener('click', function() {
                addQualificationEntry();
            });
            
            setupQualificationRemoveButtons();
        }

        function addQualificationEntry() {
            const container = document.getElementById('qualifications-container');
            const newEntry = document.querySelector('.qualification-entry').cloneNode(true);
            
            // Clear input values
            newEntry.querySelectorAll('input').forEach(input => input.value = '');
            
            container.appendChild(newEntry);
            setupQualificationRemoveButtons();
        }

        function setupQualificationRemoveButtons() {
            document.querySelectorAll('.remove-qualification').forEach(btn => {
                btn.onclick = function() {
                    if (document.querySelectorAll('.qualification-entry').length > 1) {
                        btn.closest('.qualification-entry').remove();
                    }
                };
            });
        }

        function collectQualificationsData() {
            const qualifications = [];
            document.querySelectorAll('.qualification-entry').forEach(entry => {
                const qualification = entry.querySelector('.qualification-input').value.trim();
                const country = entry.querySelector('.country-input').value.trim();
                const institution = entry.querySelector('.institution-input').value.trim();
                const year = entry.querySelector('.year-input').value.trim();
                
                if (qualification || country || institution || year) {
                    qualifications.push({ 
                        qualification: qualification || "", 
                        country: country || "", 
                        institution: institution || "", 
                        year: year || "" 
                    });
                }
            });
            
            // Ensure valid JSON even if empty
            const jsonString = qualifications.length > 0 ? JSON.stringify(qualifications) : "[]";
            document.getElementById('qualifications-json').value = jsonString;
            console.log('Qualifications JSON:', jsonString);
        }

        // Employment management
        function initializeEmployment() {
            const addBtn = document.getElementById('add-employment');
            
            addBtn.addEventListener('click', function() {
                addEmploymentEntry();
            });
            
            setupEmploymentRemoveButtons();
        }

        function addEmploymentEntry() {
            const container = document.getElementById('employment-container');
            const newEntry = document.querySelector('.employment-entry').cloneNode(true);
            
            // Clear input values
            newEntry.querySelectorAll('input').forEach(input => {
                if (input.type === 'checkbox') {
                    input.checked = false;
                } else {
                    input.value = '';
                }
            });
            
            // Clear select values
            newEntry.querySelectorAll('select').forEach(select => {
                select.selectedIndex = 0;
            });
            
            container.appendChild(newEntry);
            
            // Populate year dropdowns for the new entry
            populateYearDropdownsForEntry(newEntry);
            setupEmploymentRemoveButtons();
        }

        function populateYearDropdownsForEntry(entry) {
            const currentYear = new Date().getFullYear();
            const startYear = 1980;
            
            const yearSelects = entry.querySelectorAll('.from-year-input, .to-year-input');
            
            yearSelects.forEach(select => {
                // Clear existing options except first
                select.innerHTML = '<option value="">Select Year</option>';
                
                for (let year = currentYear; year >= startYear; year--) {
                    const option = document.createElement('option');
                    option.value = year;
                    option.textContent = year;
                    select.appendChild(option);
                }
            });
        }

        function setupEmploymentRemoveButtons() {
            document.querySelectorAll('.remove-employment').forEach(btn => {
                btn.onclick = function() {
                    if (document.querySelectorAll('.employment-entry').length > 1) {
                        btn.closest('.employment-entry').remove();
                    }
                };
            });
        }

        function collectEmploymentData() {
            const employment = [];
            document.querySelectorAll('.employment-entry').forEach(entry => {
                const fromMonth = entry.querySelector('.from-month-input').value.trim();
                const fromYear = entry.querySelector('.from-year-input').value.trim();
                const toMonth = entry.querySelector('.to-month-input').value.trim();
                const toYear = entry.querySelector('.to-year-input').value.trim();
                const job_title = entry.querySelector('.job-title-input').value.trim();
                const address = entry.querySelector('.address-input').value.trim();
                const treated_adults = entry.querySelector('.treated-adults-input').checked;
                const treated_children = entry.querySelector('.treated-children-input').checked;
                
                // Create from/to strings if both month and year are provided
                const from = (fromMonth && fromYear) ? `${fromMonth}/${fromYear}` : null;
                const to = (toMonth && toYear) ? `${toMonth}/${toYear}` : null;
                
                if (from || to || job_title || address) {
                    employment.push({ 
                        from: from, 
                        to: to, 
                        job_title: job_title || "", 
                        address: address || "", 
                        treated_adults: treated_adults, 
                        treated_children: treated_children 
                    });
                }
            });
            
            const jsonString = employment.length > 0 ? JSON.stringify(employment) : "[]";
            document.getElementById('employment-json').value = jsonString;
            console.log('Employment JSON:', jsonString);
        }

        // Clinical experience management
        function initializeClinicalExperience() {
            // Generate remaining clinical categories dynamically (first two are already in HTML)
            const container = document.getElementById('clinical-experience-container');
            
            for (let i = 2; i < procedureSections.length; i++) {
                const section = procedureSections[i];
                const categoryHtml = generateClinicalCategoryHtml(section);
                container.insertAdjacentHTML('beforeend', categoryHtml);
            }
            
            // Populate year dropdowns for all clinical experience entries
            setTimeout(() => {
                document.querySelectorAll('.last-procedure-year').forEach(select => {
                    const currentYear = new Date().getFullYear();
                    const startYear = 1980;
                    
                    for (let year = currentYear; year >= startYear; year--) {
                        const option = document.createElement('option');
                        option.value = year;
                        option.textContent = year;
                        select.appendChild(option);
                    }
                });
            }, 100);
        }

        function generateClinicalCategoryHtml(section) {
            let tableRows = '';
            
            section.procedures.forEach(proc => {
                const optionsHtml = proc.number_categories.map(opt => 
                    `<option value="${opt}">${opt}</option>`
                ).join('');
                
                tableRows += `
                    <tr>
                        <td>${proc.procedure}</td>
                        <td>
                            <select class="form-select form-select-sm">
                                <option value="">Select</option>
                                ${optionsHtml}
                            </select>
                        </td>
                        <td>
                            <select class="form-select form-select-sm">
                                <option value="">Select</option>
                                <option value="1">1</option>
                                <option value="2">2</option>
                                <option value="3">3</option>
                                <option value="4">4</option>
                                <option value="5">5</option>
                                <option value="6">6</option>
                            </select>
                        </td>
                                        <td>
                                            <div class="d-flex gap-1">
                                                <select class="form-select form-select-sm last-procedure-month">
                                                    <option value="">Month</option>
                                                    <option value="01">Jan</option>
                                                    <option value="02">Feb</option>
                                                    <option value="03">Mar</option>
                                                    <option value="04">Apr</option>
                                                    <option value="05">May</option>
                                                    <option value="06">Jun</option>
                                                    <option value="07">Jul</option>
                                                    <option value="08">Aug</option>
                                                    <option value="09">Sep</option>
                                                    <option value="10">Oct</option>
                                                    <option value="11">Nov</option>
                                                    <option value="12">Dec</option>
                                                </select>
                                                <select class="form-select form-select-sm last-procedure-year">
                                                    <option value="">Year</option>
                                                    <!-- Years populated by JS -->
                                                </select>
                                            </div>
                                        </td>
                        <td><input type="text" class="form-control form-control-sm" placeholder="(optional)" /></td>
                        <td class="text-center"><input type="checkbox" class="form-check-input" /></td>
                        <td><textarea class="form-control form-control-sm" rows="2"></textarea></td>
                    </tr>
                `;
            });

            return `
                <div class="clinical-category mb-4">
                    <h6 class="fw-bold">${section.category}</h6>
                    <div class="table-responsive">
                        <table class="table table-bordered table-sm">
                            <thead>
                                <tr>
                                    <th>Procedure</th>
                                    <th>Number of Cases</th>
                                    <th>Confidence (1-6)</th>
                                    <th>Date of Last Procedure</th>
                                    <th>Extra Info</th>
                                    <th>Training Need</th>
                                    <th>Advisor Comment</th>
                                </tr>
                            </thead>
                            <tbody>
                                ${tableRows}
                            </tbody>
                        </table>
                    </div>
                </div>
            `;
        }

        function collectClinicalExperienceData() {
            const clinicalData = [];
            
            try {
                document.querySelectorAll('.clinical-category').forEach(categoryDiv => {
                    const category = categoryDiv.querySelector('h6').textContent.trim();
                    const rows = categoryDiv.querySelectorAll('tbody tr');
                    
                    rows.forEach(row => {
                        const procedure = row.cells[0].textContent.trim();
                        const number_category = row.cells[1].querySelector('select').value;
                        const confidence_level = row.cells[2].querySelector('select').value;
                        
                        // Handle month/year date structure
                        const monthSelect = row.cells[3].querySelector('.last-procedure-month');
                        const yearSelect = row.cells[3].querySelector('.last-procedure-year');
                        const month = monthSelect ? monthSelect.value : '';
                        const year = yearSelect ? yearSelect.value : '';
                        const date_last_procedure = (month && year) ? `${month}/${year}` : null;
                        
                        const extra_info = row.cells[4].querySelector('input').value.trim();
                        const training_need_identified = row.cells[5].querySelector('input').checked;
                        const advisor_comment = row.cells[6].querySelector('textarea').value.trim();
                        
                        clinicalData.push({
                            category: category,
                            procedure: procedure,
                            number_category: number_category || "",
                            confidence_level: confidence_level || "",
                            date_last_procedure: date_last_procedure,
                            extra_info: extra_info || "",
                            training_need_identified: training_need_identified,
                            advisor_comment: advisor_comment || ""
                        });
                    });
                });
                
                const jsonString = JSON.stringify(clinicalData);
                document.getElementById('clinical-experience-json').value = jsonString;
                console.log('Clinical Experience JSON:', jsonString);
                
            } catch (error) {
                console.error('Error collecting clinical experience data:', error);
                alert('Error collecting clinical experience data. Please check your entries and try again.');
            }
        }
    </script>
}
