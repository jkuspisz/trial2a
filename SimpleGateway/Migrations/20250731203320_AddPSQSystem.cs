using System;
using Microsoft.EntityFrameworkCore.Migrations;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace SimpleGateway.Migrations
{
    /// <inheritdoc />
    public partial class AddPSQSystem : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            // FORCE PSQ SYSTEM CREATION - Check if tables exist and create if needed
            migrationBuilder.Sql(@"
                -- Create PSQQuestionnaires table if it doesn't exist
                CREATE TABLE IF NOT EXISTS ""PSQQuestionnaires"" (
                    ""Id"" integer GENERATED BY DEFAULT AS IDENTITY,
                    ""PerformerId"" integer NOT NULL,
                    ""Title"" text NOT NULL,
                    ""UniqueCode"" text NOT NULL,
                    ""IsActive"" boolean NOT NULL,
                    ""CreatedAt"" timestamp with time zone NOT NULL,
                    CONSTRAINT ""PK_PSQQuestionnaires"" PRIMARY KEY (""Id""),
                    CONSTRAINT ""FK_PSQQuestionnaires_Users_PerformerId"" FOREIGN KEY (""PerformerId"") REFERENCES ""Users"" (""Id"") ON DELETE CASCADE
                );
                
                -- Create indexes for PSQQuestionnaires
                CREATE INDEX IF NOT EXISTS ""IX_PSQQuestionnaires_PerformerId"" ON ""PSQQuestionnaires"" (""PerformerId"");
                CREATE UNIQUE INDEX IF NOT EXISTS ""IX_PSQQuestionnaires_UniqueCode"" ON ""PSQQuestionnaires"" (""UniqueCode"");
            ");

            // FORCE PSQ RESPONSES CREATION
            migrationBuilder.Sql(@"
                -- Create PSQResponses table if it doesn't exist
                CREATE TABLE IF NOT EXISTS ""PSQResponses"" (
                    ""Id"" integer GENERATED BY DEFAULT AS IDENTITY,
                    ""PSQQuestionnaireId"" integer NOT NULL,
                    ""SubmittedAt"" timestamp with time zone NOT NULL,
                    ""PutMeAtEaseScore"" integer,
                    ""TreatedWithDignityScore"" integer,
                    ""ListenedToConcernsScore"" integer,
                    ""ExplainedTreatmentOptionsScore"" integer,
                    ""InvolvedInDecisionsScore"" integer,
                    ""InvolvedFamilyScore"" integer,
                    ""TailoredApproachScore"" integer,
                    ""ExplainedNextStepsScore"" integer,
                    ""ProvidedGuidanceScore"" integer,
                    ""AllocatedTimeScore"" integer,
                    ""WorkedWithTeamScore"" integer,
                    ""CanTrustDentistScore"" integer,
                    ""DoesWellComment"" text,
                    ""CouldImproveComment"" text,
                    CONSTRAINT ""PK_PSQResponses"" PRIMARY KEY (""Id""),
                    CONSTRAINT ""FK_PSQResponses_PSQQuestionnaires_PSQQuestionnaireId"" FOREIGN KEY (""PSQQuestionnaireId"") REFERENCES ""PSQQuestionnaires"" (""Id"") ON DELETE CASCADE
                );
                
                -- Create indexes for PSQResponses
                CREATE INDEX IF NOT EXISTS ""IX_PSQResponses_PSQQuestionnaireId"" ON ""PSQResponses"" (""PSQQuestionnaireId"");
            ");

            migrationBuilder.DropColumn(
                name: "LastPatientTreatment",
                table: "TestData");

            migrationBuilder.DropColumn(
                name: "UKWorkExperience",
                table: "TestData");

            // Original EF CreateTable calls (will be ignored if tables already exist via SQL)
            try
            {
            migrationBuilder.CreateTable(
                name: "PSQQuestionnaires",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    PerformerId = table.Column<int>(type: "integer", nullable: false),
                    Title = table.Column<string>(type: "text", nullable: false),
                    UniqueCode = table.Column<string>(type: "text", nullable: false),
                    IsActive = table.Column<bool>(type: "boolean", nullable: false),
                    CreatedAt = table.Column<DateTime>(type: "timestamp with time zone", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PSQQuestionnaires", x => x.Id);
                    table.ForeignKey(
                        name: "FK_PSQQuestionnaires_Users_PerformerId",
                        column: x => x.PerformerId,
                        principalTable: "Users",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "PSQResponses",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    PSQQuestionnaireId = table.Column<int>(type: "integer", nullable: false),
                    SubmittedAt = table.Column<DateTime>(type: "timestamp with time zone", nullable: false),
                    PutMeAtEaseScore = table.Column<int>(type: "integer", nullable: true),
                    TreatedWithDignityScore = table.Column<int>(type: "integer", nullable: true),
                    ListenedToConcernsScore = table.Column<int>(type: "integer", nullable: true),
                    ExplainedTreatmentOptionsScore = table.Column<int>(type: "integer", nullable: true),
                    InvolvedInDecisionsScore = table.Column<int>(type: "integer", nullable: true),
                    InvolvedFamilyScore = table.Column<int>(type: "integer", nullable: true),
                    TailoredApproachScore = table.Column<int>(type: "integer", nullable: true),
                    ExplainedNextStepsScore = table.Column<int>(type: "integer", nullable: true),
                    ProvidedGuidanceScore = table.Column<int>(type: "integer", nullable: true),
                    AllocatedTimeScore = table.Column<int>(type: "integer", nullable: true),
                    WorkedWithTeamScore = table.Column<int>(type: "integer", nullable: true),
                    CanTrustDentistScore = table.Column<int>(type: "integer", nullable: true),
                    DoesWellComment = table.Column<string>(type: "text", nullable: true),
                    CouldImproveComment = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PSQResponses", x => x.Id);
                    table.ForeignKey(
                        name: "FK_PSQResponses_PSQQuestionnaires_PSQQuestionnaireId",
                        column: x => x.PSQQuestionnaireId,
                        principalTable: "PSQQuestionnaires",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateIndex(
                name: "IX_PSQQuestionnaires_PerformerId",
                table: "PSQQuestionnaires",
                column: "PerformerId");

            migrationBuilder.CreateIndex(
                name: "IX_PSQQuestionnaires_UniqueCode",
                table: "PSQQuestionnaires",
                column: "UniqueCode",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_PSQResponses_PSQQuestionnaireId",
                table: "PSQResponses",
                column: "PSQQuestionnaireId");
            }
            catch (Exception ex)
            {
                // Tables already exist via SQL creation above
                Console.WriteLine($"PSQ Migration: Tables already exist or EF creation skipped: {ex.Message}");
            }
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "PSQResponses");

            migrationBuilder.DropTable(
                name: "PSQQuestionnaires");

            migrationBuilder.AddColumn<string>(
                name: "LastPatientTreatment",
                table: "TestData",
                type: "text",
                nullable: false,
                defaultValue: "");

            migrationBuilder.AddColumn<string>(
                name: "UKWorkExperience",
                table: "TestData",
                type: "text",
                nullable: false,
                defaultValue: "");
        }
    }
}
